-- // How to use:
--[[
	local CommandApi = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nxrdo/Atlas/master/CommandApi.lua"))() -- // Loads the API
	-- // Chat parsing \\ --
	game.Players.LocalPlayer.Chatted:Connect(function(msg)
		CommandApi:Parse(msg) -- // Parses the message
	end)
	-- // Command bar parsing \\ --
	Textbox.FocusLost:Connect(function()
		CommandApi:Parse(Textbox.Text)
	end)
	-- // Adding Commands \\ --
	CommandApi:AddCommand("!getplayers", function()
		for _, v in pairs(game.Players:GetPlayers()) do
			print(v)
		end
	end)
--]]
return (function(L_1_arg1, L_2_arg2, L_3_arg3)
	local L_4_ = string.char;
	local L_5_ = string.sub;
	local L_6_ = table.concat;
	local L_7_ = math.ldexp;
	local L_8_ = getfenv or function()
		return _ENV
	end;
	local L_9_ = select;
	local L_10_ = unpack or table.unpack;
	local L_11_ = tonumber;
	local L_12_ = '\192\198\198\198\196\192\198\198\198\150\180\163\160\175\190\198\196\206\198\198\198\133\169\171\171\167\168\162\181\196\204\198\198\198\143\168\175\178\175\167\170\175\188\163\196\204\198\198\198\135\162\162\133\169\171\171\167\168\162\196\195\198\198\198\150\167\180\181\163\197\198\198\198\206\198\198\198\196\194\198\198\198\178\191\182\163\196\197\198\198\198\168\175\170\196\192\198\198\198\150\180\163\160\175\190\196\199\198\198\198\225\196\204\198\198\198\129\167\171\163\182\167\181\181\143\162\197\198\198\198\198\215\183\253\135\196\206\198\198\198\178\169\181\178\180\175\168\161\196\206\198\198\198\178\169\168\179\171\164\163\180\198\198\198\198\197\221\198\198\198\212\153\198\197\198\199\198\198\198\198\151\198\194\198\199\198\198\198\198\233\198\197\198\196\198\196\198\224\194\198\197\198\214\198\199\198\196\198\194\238\198\198\198\214\198\199\198\212\153\198\197\198\199\198\198\198\198\151\198\194\198\196\198\198\198\198\233\198\197\198\196\198\196\198\224\216\198\197\198\205\198\199\198\196\198\194\238\198\198\198\205\198\199\198\194\238\198\198\198\214\198\199\198\198\203\198\197\198\198\198\198\198\246\255\198\197\198\197\198\194\198\198\203\198\197\198\198\198\198\198\246\255\198\197\198\195\198\192\198\194\238\198\198\198\220\198\199\198\198\203\198\197\198\198\198\198\198\212\134\198\194\198\193\198\198\198\198\198\198\195\198\199\198\198\198\198\198\198\194\198\196\198\196\198\214\198\198\197\198\197\198\194\198\198\198\198\197\198\198\198\198\198\212\198\198\194\198\206\198\198\198\198\198\198\195\198\196\198\198\198\198\198\198\194\198\196\198\196\198\214\198\198\197\198\195\198\194\198\198\211\198\198\198\199\198\198\198\214\198\198\198\196\194\198\198\198\178\191\182\163\196\206\198\198\198\203\198\142\67\184\105\40\112\196\195\198\198\198\178\167\164\170\163\196\195\198\198\198\182\167\175\180\181\196\192\198\198\198\179\168\182\167\165\173\196\206\198\198\198\133\169\171\171\167\168\162\181\196\198\198\198\198\196\192\198\198\198\181\178\180\175\168\161\196\197\198\198\198\181\179\164\196\194\198\198\198\165\174\167\180\197\198\198\198\198\198\198\198\198\197\198\198\198\198\198\38\169\134\197\198\198\198\198\198\198\54\249\196\204\198\198\198\173\179\224\32\204\0\71\30\240\187\197\198\198\198\198\198\198\226\134\197\198\198\198\198\198\198\198\134\198\198\198\198\194\70\198\198\198\212\147\198\194\198\199\198\198\198\198\198\198\195\198\196\198\198\198\198\198\198\194\198\196\198\196\198\212\198\198\192\198\196\198\198\198\198\198\198\206\198\192\198\198\198\196\198\198\206\198\206\198\198\198\198\198\198\206\198\206\198\198\198\198\198\198\206\198\206\198\199\198\212\198\198\204\198\193\198\198\198\212\198\198\205\198\206\198\198\198\230\198\198\205\198\205\198\207\198\212\198\198\202\198\206\198\198\198\230\198\198\202\198\202\198\204\198\198\198\198\203\198\198\198\198\198\212\198\198\200\198\205\198\198\198\212\198\198\201\198\202\198\198\198\212\198\198\214\198\203\198\198\198\194\198\198\200\198\222\198\199\198\198\151\198\212\198\202\198\198\198\198\151\198\213\198\215\198\198\198\198\233\198\212\198\196\198\196\198\198\196\198\203\198\215\198\212\198\198\196\198\203\198\212\198\215\198\194\205\198\200\198\212\198\199\198\212\230\198\200\198\200\198\198\198\212\230\198\201\198\203\198\198\198\198\218\198\214\198\206\198\198\198\212\230\198\215\198\203\198\198\198\194\202\198\201\198\152\198\199\198\230\214\198\213\198\212\198\203\198\230\130\198\213\198\213\198\201\198\230\198\198\213\198\213\198\203\198\198\198\198\210\198\204\198\198\198\198\198\198\211\198\207\198\198\198\198\198\198\208\198\205\198\198\198\198\198\198\209\198\206\198\198\198\198\198\198\222\198\212\198\198\198\198\198\198\223\198\212\198\198\198\198\198\198\208\198\223\198\196\198\198\198\198\208\198\203\198\208\198\198\198\198\209\198\205\198\198\198\198\198\198\222\198\200\198\198\198\198\198\198\223\198\213\198\198\198\198\198\198\220\198\213\198\198\198\198\198\198\209\198\220\198\196\198\198\198\198\209\198\203\198\209\198\198\198\198\223\198\208\198\198\198\198\198\198\220\198\209\198\198\198\196\198\198\223\198\223\198\198\198\198\198\198\223\198\223\198\198\198\198\198\198\223\198\223\198\199\198\212\198\198\221\198\203\198\198\198\212\198\198\218\198\205\198\198\198\200\148\198\205\198\142\198\199\198\223\198\194\238\198\198\198\142\198\199\198\200\228\198\205\198\252\198\199\198\220\198\194\238\198\198\198\252\198\199\198\194\238\198\198\198\142\198\199\198\230\240\198\219\198\223\198\214\198\230\240\198\216\198\220\198\214\198\192\221\198\219\198\249\198\199\198\216\198\194\238\198\198\198\249\198\199\198\194\238\198\198\198\134\198\199\198\198\209\198\218\198\218\198\221\198\198\155\198\217\198\223\198\219\198\230\246\198\217\198\217\198\214\198\198\198\198\230\198\220\198\216\198\230\198\198\230\198\230\198\214\198\230\198\198\221\198\221\198\214\198\198\198\198\220\198\230\198\198\198\198\198\198\223\198\217\198\198\198\194\198\198\198\198\243\198\199\198\192\131\198\223\198\141\198\199\198\220\198\194\238\198\198\198\141\198\199\198\198\151\198\223\198\220\198\198\198\200\148\198\205\198\145\198\199\198\223\198\194\238\198\198\198\145\198\199\198\230\240\198\219\198\223\198\214\198\200\228\198\205\198\151\198\199\198\219\198\194\238\198\198\198\151\198\199\198\194\238\198\198\198\148\198\199\198\198\209\198\218\198\218\198\221\198\198\155\198\216\198\223\198\219\198\230\158\198\216\198\216\198\214\198\230\137\198\221\198\221\198\214\198\198\151\198\223\198\216\198\198\198\194\238\198\198\198\141\198\199\198\198\151\198\211\198\218\198\198\198\198\151\198\208\198\219\198\198\198\198\232\198\200\198\198\198\198\198\194\238\198\198\198\157\198\199\198\198\234\198\211\198\203\198\211\198\198\139\198\204\198\210\198\211\198\194\205\198\201\198\219\198\199\198\198\151\198\195\198\204\198\198\198\198\151\198\192\198\205\198\198\198\198\232\198\192\198\198\198\198\198\194\238\198\198\198\164\198\199\198\192\221\198\194\198\161\198\199\198\195\198\194\238\198\198\198\161\198\199\198\198\151\198\194\198\197\198\198\198\198\151\198\197\198\196\198\198\198\198\151\198\196\198\194\198\198\198\212\153\198\194\198\199\198\198\198\198\151\198\195\198\196\198\198\198\198\233\198\194\198\196\198\196\198\224\216\198\194\198\182\198\199\198\197\198\194\238\198\198\198\182\198\199\198\198\229\198\194\198\199\198\198\198\198\151\198\195\198\196\198\198\198\198\242\198\194\198\195\198\199\198\198\151\198\196\198\194\198\198\198\212\153\198\194\198\194\198\198\198\198\229\198\195\198\199\198\198\198\198\151\198\192\198\199\198\198\198\212\153\198\193\198\195\198\198\198\192\252\198\206\198\177\198\199\198\196\198\194\238\198\198\198\177\198\199\198\198\229\198\206\198\198\198\198\198\198\197\198\193\198\206\198\198\198\198\195\198\195\198\198\198\199\198\198\254\198\194\198\196\198\192\198\194\238\198\198\198\187\198\199\198\230\157\198\207\198\198\198\192\198\198\196\198\207\198\206\198\197\198\192\201\198\194\198\189\198\199\198\196\198\194\238\198\198\198\189\198\199\198\198\211\198\198\198\199\198\198\198\205\198\198\198\196\192\198\198\198\181\178\180\175\168\161\196\197\198\198\198\181\179\164\197\198\198\198\198\198\198\54\249\196\192\198\198\198\161\171\167\178\165\174\196\193\198\198\198\157\227\177\227\182\155\237\198\196\195\198\198\198\178\167\164\170\163\196\192\198\198\198\175\168\181\163\180\178\196\206\198\198\198\133\169\171\171\167\168\162\181\196\194\198\198\198\177\167\180\168\196\214\198\198\198\143\168\176\167\170\175\162\230\165\169\171\171\167\168\162\252\198\198\198\198\196\227\198\198\198\212\140\198\196\198\199\198\198\198\230\198\198\196\198\196\198\196\198\198\198\198\197\198\199\198\198\198\212\198\198\194\198\197\198\198\198\198\198\198\195\198\199\198\198\198\198\198\198\196\198\195\198\196\198\198\198\198\197\198\197\198\198\198\198\198\198\194\198\198\198\198\198\230\198\198\195\198\196\198\194\198\212\198\198\193\198\195\198\198\198\198\198\198\195\198\193\198\193\198\194\198\198\198\198\211\198\199\198\224\194\198\197\198\214\198\199\198\192\198\194\238\198\198\198\214\198\199\198\198\151\198\197\198\206\198\198\198\194\238\198\198\198\211\198\199\198\212\153\198\207\198\193\198\198\198\230\157\198\207\198\207\198\206\198\198\151\198\204\198\194\198\198\198\198\151\198\205\198\206\198\198\198\198\166\198\207\198\205\198\199\198\192\201\198\195\198\202\198\199\198\199\198\194\238\198\198\198\202\198\199\198\230\157\198\195\198\198\198\207\198\198\234\198\195\198\195\198\197\198\192\220\198\195\198\230\198\199\198\198\198\194\238\198\198\198\230\198\199\198\230\157\198\195\198\198\198\207\198\198\234\198\195\198\195\198\197\198\198\151\198\192\198\194\198\198\198\198\223\198\195\198\196\198\199\198\194\238\198\198\198\226\198\199\198\212\153\198\195\198\204\198\198\198\212\230\198\192\198\205\198\198\198\198\151\198\193\198\197\198\198\198\198\166\198\195\198\193\198\199\198\198\211\198\198\198\199\198\198\198\198\203\198\198\198\198\229\198\198\198\198\198\198\198\246\255\198\198\198\199\198\196\198\198\229\198\199\198\198\198\198\198\214\239\198\198\198\197\198\199\198\192\150\198\199\198\198\198\199\198\199\198\198\248\198\198\198\198\198\198\198\214\239\198\198\198\194\198\199\198\196\224\198\199\198\199\198\198\198\214\239\198\198\198\195\198\199\198\196\224\198\199\198\196\198\198\198\214\239\198\198\198\192\198\199\198\198\136\198\198\198\196\198\198\198\198\211\198\198\198\199\198\198\198';
	local L_13_ = (bit or bit32);
	local L_14_ = L_13_ and L_13_.bxor or function(L_27_arg1, L_28_arg2)
		local L_29_, L_30_, L_31_ = 1, 0, 10
		while L_27_arg1 > 0 and L_28_arg2 > 0 do
			local L_32_, L_33_ = L_27_arg1 % 2, L_28_arg2 % 2
			if L_32_ ~= L_33_ then
				L_30_ = L_30_ + L_29_
			end
			L_27_arg1, L_28_arg2, L_29_ = (L_27_arg1 - L_32_) / 2, (L_28_arg2 - L_33_) / 2, L_29_ * 2
		end
		if L_27_arg1 < L_28_arg2 then
			L_27_arg1 = L_28_arg2
		end
		while L_27_arg1 > 0 do
			local L_34_ = L_27_arg1 % 2
			if L_34_ > 0 then
				L_30_ = L_30_ + L_29_
			end
			L_27_arg1, L_29_ = (L_27_arg1 - L_34_) / 2, L_29_ * 2
		end
		return L_30_
	end
	local function L_15_func(L_35_arg1, L_36_arg2, L_37_arg3)
		if L_37_arg3 then
			local L_38_ = (L_35_arg1 / 2 ^ (L_36_arg2 - 1)) % 2 ^ ((L_37_arg3 - 1) - (L_36_arg2 - 1) + 1);
			return L_38_ - L_38_ % 1;
		else
			local L_39_ = 2 ^ (L_36_arg2 - 1);
			return (L_35_arg1 % (L_39_ + L_39_) >= L_39_) and 1 or 0;
		end;
	end;
	local L_16_ = 1;
	local function L_17_func()
		local L_40_, L_41_, L_42_, L_43_ = L_1_arg1(L_12_, L_16_, L_16_ + 3);
		L_40_ = L_14_(L_40_, 198)
		L_41_ = L_14_(L_41_, 198)
		L_42_ = L_14_(L_42_, 198)
		L_43_ = L_14_(L_43_, 198)
		L_16_ = L_16_ + 4;
		return (L_43_ * 16777216) + (L_42_ * 65536) + (L_41_ * 256) + L_40_;
	end;
	local function L_18_func()
		local L_44_ = L_14_(L_1_arg1(L_12_, L_16_, L_16_), 198);
		L_16_ = L_16_ + 1;
		return L_44_;
	end;
	local function L_19_func()
		local L_45_, L_46_ = L_1_arg1(L_12_, L_16_, L_16_ + 2);
		L_45_ = L_14_(L_45_, 198)
		L_46_ = L_14_(L_46_, 198)
		L_16_ = L_16_ + 2;
		return (L_46_ * 256) + L_45_;
	end;
	local function L_20_func()
		local L_47_ = L_17_func();
		local L_48_ = L_17_func();
		local L_49_ = 1;
		local L_50_ = (L_15_func(L_48_, 1, 20) * (2 ^ 32)) + L_47_;
		local L_51_ = L_15_func(L_48_, 21, 31);
		local L_52_ = ((-1) ^ L_15_func(L_48_, 32));
		if (L_51_ == 0) then
			if (L_50_ == 0) then
				return L_52_ * 0;
			else
				L_51_ = 1;
				L_49_ = 0;
			end;
		elseif (L_51_ == 2047) then
			return (L_50_ == 0) and (L_52_ * (1 / 0)) or (L_52_ * (0 / 0));
		end;
		return L_7_(L_52_, L_51_ - 1023) * (L_49_ + (L_50_ / (2 ^ 52)));
	end;
	local L_21_ = L_17_func;
	local function L_22_func(L_53_arg1)
		local L_54_;
		if (not L_53_arg1) then
			L_53_arg1 = L_21_();
			if (L_53_arg1 == 0) then
				return '';
			end;
		end;
		L_54_ = L_5_(L_12_, L_16_, L_16_ + L_53_arg1 - 1);
		L_16_ = L_16_ + L_53_arg1;
		local L_55_ = {}
		for L_56_forvar1 = 1, #L_54_ do
			L_55_[L_56_forvar1] = L_4_(L_14_(L_1_arg1(L_5_(L_54_, L_56_forvar1, L_56_forvar1)), 198))
		end
		return L_6_(L_55_);
	end;
	local L_23_ = L_17_func;
	local function L_24_func(...)
		return {
			...
		}, L_9_('#', ...)
	end
	local function L_25_func()
		local L_57_ = {};
		local L_58_ = {};
		local L_59_ = {};
		local L_60_ = {
			[2] = L_58_,
			[3] = nil,
			[4] = L_59_,
			[1] = L_57_,
		};
		local L_61_ = L_17_func()
		local L_62_ = {}
		for L_63_forvar1 = 1, L_61_ do
			local L_64_ = L_18_func();
			local L_65_;
			if (L_64_ == 1) then
				L_65_ = (L_18_func() ~= 0);
			elseif (L_64_ == 3) then
				L_65_ = L_20_func();
			elseif (L_64_ == 2) then
				L_65_ = L_22_func();
			end;
			L_62_[L_63_forvar1] = L_65_;
		end;
		for L_66_forvar1 = 1, L_17_func() do
			L_58_[L_66_forvar1 - 1] = L_25_func();
		end;
		L_60_[3] = L_18_func();
		for L_67_forvar1 = 1, L_17_func() do
			local L_68_ = L_18_func();
			if (L_15_func(L_68_, 1, 1) == 0) then
				local L_69_ = L_15_func(L_68_, 2, 3);
				local L_70_ = L_15_func(L_68_, 4, 6);
				local L_71_ = {
					L_19_func(),
					L_19_func(),
					nil,
					nil
				};
				if (L_69_ == 0) then
					L_71_[3] = L_19_func();
					L_71_[4] = L_19_func();
				elseif (L_69_ == 1) then
					L_71_[3] = L_17_func();
				elseif (L_69_ == 2) then
					L_71_[3] = L_17_func() - (2 ^ 16)
				elseif (L_69_ == 3) then
					L_71_[3] = L_17_func() - (2 ^ 16)
					L_71_[4] = L_19_func();
				end;
				if (L_15_func(L_70_, 1, 1) == 1) then
					L_71_[2] = L_62_[L_71_[2]]
				end
				if (L_15_func(L_70_, 2, 2) == 1) then
					L_71_[3] = L_62_[L_71_[3]]
				end
				if (L_15_func(L_70_, 3, 3) == 1) then
					L_71_[4] = L_62_[L_71_[4]]
				end
				L_57_[L_67_forvar1] = L_71_;
			end
		end;
		return L_60_;
	end;
	local function L_26_func(L_72_arg1, L_73_arg2, L_74_arg3)
		L_72_arg1 = (L_72_arg1 == true and L_25_func()) or L_72_arg1;
		return (function(...)
			local L_75_ = L_72_arg1[1];
			local L_76_ = L_72_arg1[3];
			local L_77_ = L_72_arg1[2];
			local L_78_ = L_24_func
			local L_79_ = 1;
			local L_80_ = -1;
			local L_81_ = {};
			local L_82_ = {
				...
			};
			local L_83_ = L_9_('#', ...) - 1;
			local L_84_ = {};
			local L_85_ = {};
			for L_89_forvar1 = 0, L_83_ do
				if (L_89_forvar1 >= L_76_) then
					L_81_[L_89_forvar1 - L_76_] = L_82_[L_89_forvar1 + 1];
				else
					L_85_[L_89_forvar1] = L_82_[L_89_forvar1 + 1];
				end;
			end;
			local L_86_ = L_83_ - L_76_ + 1
			local L_87_;
			local L_88_;
			while true do
				L_87_ = L_75_[L_79_];
				L_88_ = L_87_[1];
				if L_88_ <= 48 then
					if L_88_ <= 23 then
						if L_88_ <= 11 then
							if L_88_ <= 5 then
								if L_88_ <= 2 then
									if L_88_ <= #("") then
										L_85_[L_87_[2]] = L_85_[L_87_[3]] % L_87_[4];
									elseif L_88_ > 1 then
										L_85_[L_87_[2]][L_85_[L_87_[3]]] = L_85_[L_87_[4]];
									else
										if (L_87_[2] < L_85_[L_87_[4]]) then
											L_79_ = L_87_[3];
										else
											L_79_ = L_79_ + 1;
										end;
									end;
								elseif L_88_ <= 3 then
									local L_90_ = L_87_[2]
									local L_91_, L_92_ = L_78_(L_85_[L_90_](L_85_[L_90_ + 1]))
									L_80_ = L_92_ + L_90_ - 1
									local L_93_ = 0;
									for L_94_forvar1 = L_90_, L_80_ do
										L_93_ = L_93_ + 1;
										L_85_[L_94_forvar1] = L_91_[L_93_];
									end;
								elseif L_88_ > 4 then
									local L_95_ = L_87_[2];
									local L_96_ = L_85_[L_95_];
									for L_97_forvar1 = L_95_ + 1, L_80_ do
										L_2_arg2(L_96_, L_85_[L_97_forvar1])
									end;
								else
									if (L_85_[L_87_[2]] == L_87_[4]) then
										L_79_ = L_79_ + 1;
									else
										L_79_ = L_87_[3];
									end;
								end;
							elseif L_88_ <= 8 then
								if L_88_ <= 6 then
									L_85_[L_87_[2]] = L_85_[L_87_[3]] - L_85_[L_87_[4]];
								elseif L_88_ == 7 then
									L_85_[L_87_[2]][L_87_[3]] = L_87_[4];
								else
									L_85_[L_87_[2]] = L_85_[L_87_[3]] - L_87_[4];
								end;
							elseif L_88_ <= 9 then
								local L_98_ = L_87_[2];
								local L_99_ = L_85_[L_98_];
								for L_100_forvar1 = L_98_ + 1, L_80_ do
									L_2_arg2(L_99_, L_85_[L_100_forvar1])
								end;
							elseif L_88_ == 10 then
								do
									return
								end;
							else
								local L_101_ = L_87_[2];
								local L_102_ = L_85_[L_101_ + 2];
								local L_103_ = L_85_[L_101_] + L_102_;
								L_85_[L_101_] = L_103_;
								if (L_102_ > 0) then
									if (L_103_ <= L_85_[L_101_ + 1]) then
										L_79_ = L_87_[3];
										L_85_[L_101_ + 3] = L_103_;
									end
								elseif (L_103_ >= L_85_[L_101_ + 1]) then
									L_79_ = L_87_[3];
									L_85_[L_101_ + 3] = L_103_;
								end
							end;
						elseif L_88_ <= 17 then
							if L_88_ <= 14 then
								if L_88_ <= 12 then
									local L_104_ = L_87_[2];
									local L_105_ = L_85_[L_104_]
									local L_106_ = L_85_[L_104_ + 2];
									if (L_106_ > 0) then
										if (L_105_ > L_85_[L_104_ + 1]) then
											L_79_ = L_87_[3];
										else
											L_85_[L_104_ + 3] = L_105_;
										end
									elseif (L_105_ < L_85_[L_104_ + 1]) then
										L_79_ = L_87_[3];
									else
										L_85_[L_104_ + 3] = L_105_;
									end
								elseif L_88_ == 13 then
									L_85_[L_87_[2]] = L_73_arg2[L_87_[3]];
								else
									if (L_85_[L_87_[2]] == L_85_[L_87_[4]]) then
										L_79_ = L_79_ + 1;
									else
										L_79_ = L_87_[3];
									end;
								end;
							elseif L_88_ <= 15 then
								local L_107_ = L_87_[2];
								local L_108_ = L_87_[4];
								local L_109_ = L_107_ + 2
								local L_110_ = {
									L_85_[L_107_](L_85_[L_107_ + 1], L_85_[L_109_])
								};
								for L_112_forvar1 = 1, L_108_ do
									L_85_[L_109_ + L_112_forvar1] = L_110_[L_112_forvar1];
								end;
								local L_111_ = L_110_[1]
								if L_111_ then
									L_85_[L_109_] = L_111_
									L_79_ = L_87_[3];
								else
									L_79_ = L_79_ + 1;
								end;
							elseif L_88_ == 16 then
								L_85_[L_87_[2]] = L_85_[L_87_[3]] - L_87_[4];
							else
								local L_113_ = L_87_[2]
								L_85_[L_113_] = L_85_[L_113_](L_85_[L_113_ + 1])
							end;
						elseif L_88_ <= 20 then
							if L_88_ <= 18 then
								L_85_[L_87_[2]] = L_85_[L_87_[3]] / L_87_[4];
							elseif L_88_ > 19 then
								L_85_[L_87_[2]] = L_74_arg3[L_87_[3]];
							else
								L_85_[L_87_[2]] = L_85_[L_87_[3]] + L_85_[L_87_[4]];
							end;
						elseif L_88_ <= 21 then
							do
								return
							end;
						elseif L_88_ > 22 then
							L_85_[L_87_[2]] = L_85_[L_87_[3]] + L_85_[L_87_[4]];
						else
							local L_114_ = L_87_[2]
							local L_115_, L_116_ = L_78_(L_85_[L_114_](L_85_[L_114_ + 1]))
							L_80_ = L_116_ + L_114_ - 1
							local L_117_ = 0;
							for L_118_forvar1 = L_114_, L_80_ do
								L_117_ = L_117_ + 1;
								L_85_[L_118_forvar1] = L_115_[L_117_];
							end;
						end;
					elseif L_88_ <= 35 then
						if L_88_ <= 29 then
							if L_88_ <= 26 then
								if L_88_ <= 24 then
									L_80_ = L_87_[2];
								elseif L_88_ > 25 then
									if L_85_[L_87_[2]] then
										L_79_ = L_79_ + 1;
									else
										L_79_ = L_87_[3];
									end;
								else
									local L_119_ = L_87_[2]
									L_85_[L_119_](L_85_[L_119_ + 1])
								end;
							elseif L_88_ <= 27 then
								if (L_85_[L_87_[2]] == L_85_[L_87_[4]]) then
									L_79_ = L_79_ + 1;
								else
									L_79_ = L_87_[3];
								end;
							elseif L_88_ > 28 then
								if (L_85_[L_87_[2]] < L_85_[L_87_[4]]) then
									L_79_ = L_79_ + 1;
								else
									L_79_ = L_87_[3];
								end;
							else
								L_85_[L_87_[2]] = #L_85_[L_87_[3]];
							end;
						elseif L_88_ <= 32 then
							if L_88_ <= 30 then
								if (L_85_[L_87_[2]] ~= L_87_[4]) then
									L_79_ = L_79_ + 1;
								else
									L_79_ = L_87_[3];
								end;
							elseif L_88_ > 31 then
								L_85_[L_87_[2]] = L_87_[3];
							else
								L_85_[L_87_[2]] = #L_85_[L_87_[3]];
							end;
						elseif L_88_ <= 33 then
							local L_120_ = L_87_[2];
							local L_121_ = L_85_[L_87_[3]];
							L_85_[L_120_ + 1] = L_121_;
							L_85_[L_120_] = L_121_[L_87_[4]];
						elseif L_88_ == 34 then
							if (L_87_[2] < L_85_[L_87_[4]]) then
								L_79_ = L_87_[3];
							else
								L_79_ = L_79_ + 1;
							end;
						else
							L_85_[L_87_[2]] = {};
						end;
					elseif L_88_ <= 41 then
						if L_88_ <= 38 then
							if L_88_ <= 36 then
								local L_122_ = L_87_[2];
								local L_123_ = L_87_[4];
								local L_124_ = L_122_ + 2
								local L_125_ = {
									L_85_[L_122_](L_85_[L_122_ + 1], L_85_[L_124_])
								};
								for L_127_forvar1 = 1, L_123_ do
									L_85_[L_124_ + L_127_forvar1] = L_125_[L_127_forvar1];
								end;
								local L_126_ = L_125_[1]
								if L_126_ then
									L_85_[L_124_] = L_126_
									L_79_ = L_87_[3];
								else
									L_79_ = L_79_ + 1;
								end;
							elseif L_88_ == 37 then
								local L_128_ = L_77_[L_87_[3]];
								local L_129_;
								local L_130_ = {};
								L_129_ = L_3_arg3({}, {
									__index = function(L_131_arg1, L_132_arg2)
										local L_133_ = L_130_[L_132_arg2];
										return L_133_[1][L_133_[2]];
									end,
									__newindex = function(L_134_arg1, L_135_arg2, L_136_arg3)
										local L_137_ = L_130_[L_135_arg2]
										L_137_[1][L_137_[2]] = L_136_arg3;
									end;
								});
								for L_138_forvar1 = 1, L_87_[4] do
									L_79_ = L_79_ + 1;
									local L_139_ = L_75_[L_79_];
									if L_139_[1] == 62 then
										L_130_[L_138_forvar1 - 1] = {
											L_85_,
											L_139_[3]
										};
									else
										L_130_[L_138_forvar1 - 1] = {
											L_73_arg2,
											L_139_[3]
										};
									end;
									L_84_[#L_84_ + 1] = L_130_;
								end;
								L_85_[L_87_[2]] = L_26_func(L_128_, L_129_, L_74_arg3);
							else
								L_85_[L_87_[2]] = L_26_func(L_77_[L_87_[3]], nil, L_74_arg3);
							end;
						elseif L_88_ <= 39 then
							local L_140_ = L_87_[2];
							local L_141_ = L_85_[L_140_]
							local L_142_ = L_85_[L_140_ + 2];
							if (L_142_ > 0) then
								if (L_141_ > L_85_[L_140_ + 1]) then
									L_79_ = L_87_[3];
								else
									L_85_[L_140_ + 3] = L_141_;
								end
							elseif (L_141_ < L_85_[L_140_ + 1]) then
								L_79_ = L_87_[3];
							else
								L_85_[L_140_ + 3] = L_141_;
							end
						elseif L_88_ > 40 then
							L_85_[L_87_[2]][L_87_[3]] = L_85_[L_87_[4]];
						else
							L_79_ = L_87_[3];
						end;
					elseif L_88_ <= 44 then
						if L_88_ <= 42 then
							local L_143_ = L_87_[2];
							local L_144_ = L_85_[L_143_];
							for L_145_forvar1 = L_143_ + 1, L_87_[3] do
								L_2_arg2(L_144_, L_85_[L_145_forvar1])
							end;
						elseif L_88_ > 43 then
							L_85_[L_87_[2]] = L_85_[L_87_[3]][L_85_[L_87_[4]]];
						else
							L_79_ = L_87_[3];
						end;
					elseif L_88_ <= 46 then
						if L_88_ == 45 then
							L_85_[L_87_[2]] = L_87_[3];
						else
							L_80_ = L_87_[2];
						end;
					elseif L_88_ > 47 then
						L_85_[L_87_[2]] = L_85_[L_87_[3]] / L_87_[4];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]] - L_85_[L_87_[4]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]] / L_87_[4];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]] * L_87_[4];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_79_ = L_87_[3];
					else
						local L_146_ = L_87_[2]
						L_85_[L_146_] = L_85_[L_146_](L_85_[L_146_ + 1])
					end;
				elseif L_88_ <= 73 then
					if L_88_ <= 60 then
						if L_88_ <= 54 then
							if L_88_ <= 51 then
								if L_88_ <= 49 then
									L_85_[L_87_[2]] = L_85_[L_87_[3]] + L_87_[4];
								elseif L_88_ == 50 then
									local L_147_ = L_87_[2]
									L_85_[L_147_](L_10_(L_85_, L_147_ + 1, L_87_[3]))
								else
									if (L_87_[2] < L_85_[L_87_[4]]) then
										L_79_ = L_79_ + 1;
									else
										L_79_ = L_87_[3];
									end;
								end;
							elseif L_88_ <= 52 then
								local L_148_ = L_87_[2];
								local L_149_ = L_85_[L_148_];
								for L_150_forvar1 = L_148_ + 1, L_87_[3] do
									L_2_arg2(L_149_, L_85_[L_150_forvar1])
								end;
							elseif L_88_ > 53 then
								L_85_[L_87_[2]] = L_85_[L_87_[3]] % L_87_[4];
							else
								L_85_[L_87_[2]][L_85_[L_87_[3]]] = L_85_[L_87_[4]];
							end;
						elseif L_88_ <= 57 then
							if L_88_ <= 55 then
								for L_151_forvar1 = L_87_[2], L_87_[3] do
									L_85_[L_151_forvar1] = nil;
								end;
							elseif L_88_ == 56 then
								local L_152_ = L_87_[2]
								local L_153_ = {
									L_85_[L_152_](L_85_[L_152_ + 1])
								};
								local L_154_ = 0;
								for L_155_forvar1 = L_152_, L_87_[4] do
									L_154_ = L_154_ + 1;
									L_85_[L_155_forvar1] = L_153_[L_154_];
								end
							else
								L_85_[L_87_[2]][L_87_[3]] = L_87_[4];
							end;
						elseif L_88_ <= 58 then
							local L_156_ = L_85_[L_87_[4]];
							if not L_156_ then
								L_79_ = L_79_ + 1;
							else
								L_85_[L_87_[2]] = L_156_;
								L_79_ = L_87_[3];
							end;
						elseif L_88_ == 59 then
							local L_157_ = L_87_[2]
							local L_158_ = {
								L_85_[L_157_](L_85_[L_157_ + 1])
							};
							local L_159_ = 0;
							for L_160_forvar1 = L_157_, L_87_[4] do
								L_159_ = L_159_ + 1;
								L_85_[L_160_forvar1] = L_158_[L_159_];
							end
						else
							local L_161_ = L_85_[L_87_[4]];
							if not L_161_ then
								L_79_ = L_79_ + 1;
							else
								L_85_[L_87_[2]] = L_161_;
								L_79_ = L_87_[3];
							end;
						end;
					elseif L_88_ <= 66 then
						if L_88_ <= 63 then
							if L_88_ <= 61 then
								for L_162_forvar1 = L_87_[2], L_87_[3] do
									L_85_[L_162_forvar1] = nil;
								end;
							elseif L_88_ > 62 then
								local L_163_ = L_87_[2]
								L_85_[L_163_](L_85_[L_163_ + 1])
							else
								L_85_[L_87_[2]] = L_85_[L_87_[3]];
							end;
						elseif L_88_ <= 64 then
							local L_164_;
							L_85_[L_87_[2]] = L_74_arg3[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_164_ = L_87_[2]
							L_85_[L_164_] = L_85_[L_164_](L_85_[L_164_ + 1])
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]][L_87_[3]] = L_85_[L_87_[4]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_73_arg2[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_74_arg3[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_164_ = L_87_[2]
							L_85_[L_164_] = L_85_[L_164_](L_85_[L_164_ + 1])
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]][L_87_[3]] = L_85_[L_87_[4]];
						elseif L_88_ > 65 then
							if L_85_[L_87_[2]] then
								L_79_ = L_79_ + 1;
							else
								L_79_ = L_87_[3];
							end;
						else
							local L_165_ = L_87_[2];
							local L_166_ = L_85_[L_87_[3]];
							L_85_[L_165_ + 1] = L_166_;
							L_85_[L_165_] = L_166_[L_87_[4]];
						end;
					elseif L_88_ <= 69 then
						if L_88_ <= 67 then
							local L_167_ = L_87_[2]
							local L_168_ = {
								L_85_[L_167_](L_10_(L_85_, L_167_ + 1, L_87_[3]))
							};
							local L_169_ = 0;
							for L_170_forvar1 = L_167_, L_87_[4] do
								L_169_ = L_169_ + 1;
								L_85_[L_170_forvar1] = L_168_[L_169_];
							end
						elseif L_88_ > 68 then
							if (L_85_[L_87_[2]] < L_85_[L_87_[4]]) then
								L_79_ = L_79_ + 1;
							else
								L_79_ = L_87_[3];
							end;
						else
							local L_171_;
							L_85_[L_87_[2]] = L_85_[L_87_[3]] % L_87_[4];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]] + L_87_[4];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_171_ = L_87_[2]
							L_85_[L_171_] = L_85_[L_171_](L_10_(L_85_, L_171_ + 1, L_87_[3]))
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]][L_85_[L_87_[4]]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_171_ = L_87_[2]
							L_85_[L_171_] = L_85_[L_171_](L_10_(L_85_, L_171_ + 1, L_87_[3]))
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]][L_85_[L_87_[4]]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_87_[3];
							L_79_ = L_79_ + 1;
							L_87_ = L_75_[L_79_];
							L_85_[L_87_[2]] = L_87_[3];
						end;
					elseif L_88_ <= 71 then
						if L_88_ == 70 then
							do
								return L_85_[L_87_[2]]
							end
						else
							L_85_[L_87_[2]] = {};
						end;
					elseif L_88_ == 72 then
						L_85_[L_87_[2]] = L_73_arg2[L_87_[3]];
					else
						if (L_85_[L_87_[2]] ~= L_87_[4]) then
							L_79_ = L_79_ + 1;
						else
							L_79_ = L_87_[3];
						end;
					end;
				elseif L_88_ <= 85 then
					if L_88_ <= 79 then
						if L_88_ <= 76 then
							if L_88_ <= 74 then
								local L_172_;
								local L_173_;
								local L_174_;
								local L_175_;
								L_85_[L_87_[2]] = L_74_arg3[L_87_[3]];
								L_79_ = L_79_ + 1;
								L_87_ = L_75_[L_79_];
								L_85_[L_87_[2]] = L_85_[L_87_[3]][L_87_[4]];
								L_79_ = L_79_ + 1;
								L_87_ = L_75_[L_79_];
								L_85_[L_87_[2]] = L_85_[L_87_[3]];
								L_79_ = L_79_ + 1;
								L_87_ = L_75_[L_79_];
								L_85_[L_87_[2]] = L_87_[3];
								L_79_ = L_79_ + 1;
								L_87_ = L_75_[L_79_];
								L_85_[L_87_[2]] = #L_85_[L_87_[3]];
								L_79_ = L_79_ + 1;
								L_87_ = L_75_[L_79_];
								L_175_ = L_87_[2]
								L_85_[L_175_] = L_85_[L_175_](L_10_(L_85_, L_175_ + 1, L_87_[3]))
								L_79_ = L_79_ + 1;
								L_87_ = L_75_[L_79_];
								for L_176_forvar1 = L_87_[2], L_87_[3] do
									L_85_[L_176_forvar1] = nil;
								end;
								L_79_ = L_79_ + 1;
								L_87_ = L_75_[L_79_];
								L_85_[L_87_[2]] = {};
								L_79_ = L_79_ + 1;
								L_87_ = L_75_[L_79_];
								L_175_ = L_87_[2];
								L_174_ = L_85_[L_87_[3]];
								L_85_[L_175_ + 1] = L_174_;
								L_85_[L_175_] = L_174_[L_87_[4]];
								L_79_ = L_79_ + 1;
								L_87_ = L_75_[L_79_];
								L_85_[L_87_[2]] = L_87_[3];
								L_79_ = L_79_ + 1;
								L_87_ = L_75_[L_79_];
								L_175_ = L_87_[2]
								L_173_ = {
									L_85_[L_175_](L_10_(L_85_, L_175_ + 1, L_87_[3]))
								};
								L_172_ = 0;
								for L_177_forvar1 = L_175_, L_87_[4] do
									L_172_ = L_172_ + 1;
									L_85_[L_177_forvar1] = L_173_[L_172_];
								end
								L_79_ = L_79_ + 1;
								L_87_ = L_75_[L_79_];
								L_79_ = L_87_[3];
							elseif L_88_ == 75 then
								L_85_[L_87_[2]] = L_85_[L_87_[3]] * L_87_[4];
							else
								local L_178_ = L_87_[2]
								L_85_[L_178_] = L_85_[L_178_](L_10_(L_85_, L_178_ + 1, L_87_[3]))
							end;
						elseif L_88_ <= 77 then
							local L_179_ = L_87_[3];
							local L_180_ = L_85_[L_179_]
							for L_181_forvar1 = L_179_ + 1, L_87_[4] do
								L_180_ = L_180_..L_85_[L_181_forvar1];
							end;
							L_85_[L_87_[2]] = L_180_;
						elseif L_88_ == 78 then
							do
								return L_85_[L_87_[2]]
							end
						else
							L_85_[L_87_[2]] = L_85_[L_87_[3]] * L_87_[4];
						end;
					elseif L_88_ <= 82 then
						if L_88_ <= 80 then
							local L_182_ = L_77_[L_87_[3]];
							local L_183_;
							local L_184_ = {};
							L_183_ = L_3_arg3({}, {
								__index = function(L_185_arg1, L_186_arg2)
									local L_187_ = L_184_[L_186_arg2];
									return L_187_[1][L_187_[2]];
								end,
								__newindex = function(L_188_arg1, L_189_arg2, L_190_arg3)
									local L_191_ = L_184_[L_189_arg2]
									L_191_[1][L_191_[2]] = L_190_arg3;
								end;
							});
							for L_192_forvar1 = 1, L_87_[4] do
								L_79_ = L_79_ + 1;
								local L_193_ = L_75_[L_79_];
								if L_193_[1] == 62 then
									L_184_[L_192_forvar1 - 1] = {
										L_85_,
										L_193_[3]
									};
								else
									L_184_[L_192_forvar1 - 1] = {
										L_73_arg2,
										L_193_[3]
									};
								end;
								L_84_[#L_84_ + 1] = L_184_;
							end;
							L_85_[L_87_[2]] = L_26_func(L_182_, L_183_, L_74_arg3);
						elseif L_88_ > 81 then
							if (L_87_[2] < L_85_[L_87_[4]]) then
								L_79_ = L_79_ + 1;
							else
								L_79_ = L_87_[3];
							end;
						else
							L_85_[L_87_[2]] = L_85_[L_87_[3]];
						end;
					elseif L_88_ <= 83 then
						local L_194_ = L_87_[2]
						L_85_[L_194_] = L_85_[L_194_](L_10_(L_85_, L_194_ + 1, L_87_[3]))
					elseif L_88_ == 84 then
						local L_195_ = L_87_[3];
						local L_196_ = L_85_[L_195_]
						for L_197_forvar1 = L_195_ + 1, L_87_[4] do
							L_196_ = L_196_..L_85_[L_197_forvar1];
						end;
						L_85_[L_87_[2]] = L_196_;
					else
						local L_198_;
						local L_199_;
						local L_200_;
						L_85_[L_87_[2]] = L_74_arg3[L_87_[3]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_200_ = L_87_[2]
						L_85_[L_200_] = L_85_[L_200_](L_85_[L_200_ + 1])
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_87_[3];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_87_[3];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_74_arg3[L_87_[3]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]][L_87_[4]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_74_arg3[L_87_[3]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_85_[L_87_[3]][L_87_[4]];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = {};
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_87_[3];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_87_[3];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_85_[L_87_[2]] = L_87_[3];
						L_79_ = L_79_ + 1;
						L_87_ = L_75_[L_79_];
						L_200_ = L_87_[2];
						L_199_ = L_85_[L_200_]
						L_198_ = L_85_[L_200_ + 2];
						if (L_198_ > 0) then
							if (L_199_ > L_85_[L_200_ + 1]) then
								L_79_ = L_87_[3];
							else
								L_85_[L_200_ + 3] = L_199_;
							end
						elseif (L_199_ < L_85_[L_200_ + 1]) then
							L_79_ = L_87_[3];
						else
							L_85_[L_200_ + 3] = L_199_;
						end
					end;
				elseif L_88_ <= 91 then
					if L_88_ <= 88 then
						if L_88_ <= 86 then
							L_85_[L_87_[2]] = L_26_func(L_77_[L_87_[3]], nil, L_74_arg3);
						elseif L_88_ == 87 then
							L_85_[L_87_[2]] = L_85_[L_87_[3]][L_87_[4]];
						else
							L_85_[L_87_[2]] = L_85_[L_87_[3]] / L_87_[4];
						end;
					elseif L_88_ <= 89 then
						if (L_85_[L_87_[2]] == L_87_[4]) then
							L_79_ = L_79_ + 1;
						else
							L_79_ = L_87_[3];
						end;
					elseif L_88_ == 90 then
						L_85_[L_87_[2]] = L_85_[L_87_[3]] + L_87_[4];
					else
						L_85_[L_87_[2]] = L_85_[L_87_[3]][L_87_[4]];
					end;
				elseif L_88_ <= 94 then
					if L_88_ <= 92 then
						L_85_[L_87_[2]][L_87_[3]] = L_85_[L_87_[4]];
					elseif L_88_ == 93 then
						L_85_[L_87_[2]] = L_85_[L_87_[3]] - L_85_[L_87_[4]];
					else
						L_85_[L_87_[2]] = L_85_[L_87_[3]][L_85_[L_87_[4]]];
					end;
				elseif L_88_ <= 96 then
					if L_88_ > 95 then
						local L_201_ = L_87_[2]
						L_85_[L_201_](L_10_(L_85_, L_201_ + 1, L_87_[3]))
					else
						L_85_[L_87_[2]] = L_74_arg3[L_87_[3]];
					end;
				elseif L_88_ > 97 then
					local L_202_ = L_87_[2]
					local L_203_ = {
						L_85_[L_202_](L_10_(L_85_, L_202_ + 1, L_87_[3]))
					};
					local L_204_ = 0;
					for L_205_forvar1 = L_202_, L_87_[4] do
						L_204_ = L_204_ + 1;
						L_85_[L_205_forvar1] = L_203_[L_204_];
					end
				else
					local L_206_ = L_87_[2];
					local L_207_ = L_85_[L_206_ + 2];
					local L_208_ = L_85_[L_206_] + L_207_;
					L_85_[L_206_] = L_208_;
					if (L_207_ > 0) then
						if (L_208_ <= L_85_[L_206_ + 1]) then
							L_79_ = L_87_[3];
							L_85_[L_206_ + 3] = L_208_;
						end
					elseif (L_208_ >= L_85_[L_206_ + 1]) then
						L_79_ = L_87_[3];
						L_85_[L_206_ + 3] = L_208_;
					end
				end;
				L_79_ = L_79_ + 1;
			end;
		end);
	end;
	return L_26_func(true, {}, L_8_())();
end)(string.byte, table.insert, setmetatable);
